magnoliaLightModuleUpdater:
  privateKey: "" # Pass this base64 encoded
  repoUrl: ""
  tag: false # change this to true to checkout a tag from the coresponding config map or to a specific version to hardcode that
  branch: "master"
  sourceDir: "/"
  image:
    repository: neoskop/mgnl-light-module-updater
    tag: 0.21.1
    pullPolicy: Always
    pullSecret: {}
  resources:
    requests:
      memory: 50M
      cpu: 0.1
    limits:
      memory: 250M
magnoliaRuntime:
  image:
    repository: neoskop/mgnl-runtime-env
    tag: 9.0.54
    pullPolicy: IfNotPresent
    pullSecret: {}
  resources:
    requests:
      memory: 2560M
      cpu: 250m
    limits:
      memory: 4096M
magnoliaWebapp:
  image:
    repository: neoskop/mgnl-webapp-ce
    tag: 6.2.40
    pullPolicy: IfNotPresent
    pullSecret: {}
  resources:
    requests:
      memory: 100Mi
      cpu: "0.1"
    limits:
      memory: 100Mi
tmpInit:
  image:
    repository: busybox
    tag: 1.36.1
    pullPolicy: IfNotPresent
    pullSecret: {}
  resources:
    requests:
      memory: 20Mi
      cpu: 10m
    limits:
      memory: 20Mi
mysqlInit:
  image:
    repository: busybox
    tag: 1.36.1
    pullPolicy: IfNotPresent
    pullSecret: {}
  resources:
    requests:
      memory: 20Mi
      cpu: "0.01"
    limits:
      memory: 20Mi
mysql:
  enabled: true
  rootPassword: ""
  image:
    repository: mysql
    tag: 8.2.0
    pullPolicy: IfNotPresent
    pullSecret: {}
  resources:
    requests:
      memory: 200Mi
    limits:
      memory: 500Mi
  storage:
    resources:
      requests:
        storage: 3Gi
  nodeSelector: {}
  tolerations: []
  affinity: {}
magnoliaTmp:
  storage:
    resources:
      requests:
        storage: 250m
magnoliaActivation:
  privateKey: ""
  publicKey: ""
paperboy:
  token: ""
  userPassword: ""
  webhookUrl: http://paperboy-push-service.paperboy.svc.cluster.local:8080/
paperboyPreview:
  token: ""
  userPassword: ""
  webhookUrl: http://paperboy-preview-push-service.paperboy.svc.cluster.local:8080/
magnoliaPublic:
  replicaCount: 1
  configName: livePublic
  customEnv: {}
  datasource:
    host: "" # If empty the created service is used
    port: 3306
    username: "" # If empty the value is derived automatically
    password: ""
    database: "" # If empty the value is derived automatically
    name: MagnoliaPublic
  assetIngress:
    enabled: false
    hostname: magnolia-public-assets.local
    secret:
      enabled: false
      ca: ""
      cert: ""
      key: ""
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /dam/$1
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "X-Robots-Tag: noindex";
  ingress:
    enabled: true
    hostname: magnolia-public.local
    secret:
      enabled: false
      ca: ""
      cert: ""
      key: ""
    annotations: {}
    labels: {}
  nodeSelector: {}
  tolerations: []
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - magnolia-public
          topologyKey: "kubernetes.io/hostname"
magnoliaAuthor:
  replicaCount: 1
  configName: liveAuthor
  customEnv: {}
  datasource:
    host: "" # If empty the created service is used
    port: 3306
    username: "" # If empty the value is derived automatically
    password: ""
    database: "" # If empty the value is derived automatically
    name: MagnoliaAuthor
  assetIngress:
    enabled: false
    hostname: magnolia-author-assets.local
    secret:
      enabled: false
      ca: ""
      cert: ""
      key: ""
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /dam/$1
      nginx.ingress.kubernetes.io/configuration-snippet: |
        more_set_headers "X-Robots-Tag: noindex";
  ingress:
    enabled: true
    hostname: magnolia-author.local
    secret:
      enabled: false
      ca: ""
      cert: ""
      key: ""
    annotations: {}
    labels: {}
  nodeSelector: {}
  tolerations: []
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - magnolia-author
          topologyKey: "kubernetes.io/hostname"
keel:
  enabled: true
  annotations:
    keel.sh/policy: minor
    keel.sh/trigger: poll
    keel.sh/pollSchedule: "@every 1h"
nameOverride: ""
fullnameOverride: ""
resources: {}
nodeSelector: {}
tolerations: []
affinity: {}
