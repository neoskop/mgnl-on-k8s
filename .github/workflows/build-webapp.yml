name: Build webapp images

on:
  push:
    branches:
      - master
  schedule:
    - cron: "0 4 * * *"

env:
  NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  MIN_VERSION: 6.3.15

jobs:
  get-versions:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.set-versions.outputs.versions }}
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y xmlstarlet curl

      - id: set-versions
        run: |
          versions=$(curl -s https://nexus.magnolia-cms.com/repository/public/info/magnolia/magnolia-empty-webapp/maven-metadata.xml \
            | xmlstarlet sel -t -v '//metadata/versioning/versions/version/text()' - \
            | sort -V -r)

          result=()
          for v in $versions; do
            if [ "$(printf '%s\n' "$MIN_VERSION" "$v" | sort -V | head -n1)" = "$MIN_VERSION" ] \
              && ! echo "$v" | grep -Pqi 'snapshot|beta|alpha|rc'; then
              result+=("\"$v\"")
            fi
          done

          json="[${result[*]}]"
          echo "versions=$json" >> $GITHUB_OUTPUT

  build-wars:
    runs-on: ubuntu-latest
    needs: get-versions
    strategy:
      matrix:
        version: ${{ fromJSON(needs.get-versions.outputs.versions) }}
        flavor: [dx-damfs, ce-damfs, dx, ce]
    container:
      image: maven:3.9.6-eclipse-temurin-17
      options: --user root
    steps:
      - name: Install dependencies
        run: apt-get update && apt-get install -y xmlstarlet curl

      - name: Checkout source
        uses: actions/checkout@v4

      - name: Configure Maven settings for Magnolia Nexus
        shell: bash
        run: |
          mkdir -p /root/.m2
          cat > /root/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>magnolia.enterprise</id>
                <username>${NEXUS_USERNAME}</username>
                <password>${NEXUS_PASSWORD}</password>
              </server>
              <server>
                <id>magnolia.enterprise.releases</id>
                <username>${NEXUS_USERNAME}</username>
                <password>${NEXUS_PASSWORD}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Build WAR for ${{ matrix.flavor }} ${{ matrix.version }}
        shell: bash
        run: |
          repo_root="${GITHUB_WORKSPACE}"
          edition=$(echo "${{ matrix.flavor }}" | cut -c 1-2)
          cd $(mktemp -d)

          cp $repo_root/images/webapp/magnolia-build/$edition/pom.parent.xml pom.xml
          mkdir -p ./webapp/src/main/webapp
          cp $repo_root/images/webapp/magnolia-build/$edition/pom.webapp.xml webapp/pom.xml
          cp -r $repo_root/images/webapp/magnolia-build/WEB-INF ./webapp/src/main/webapp/WEB-INF

          if [[ $edition == ce ]]; then
            xmlstarlet ed -L -N p="http://maven.apache.org/POM/4.0.0" -d "//p:dependency[p:artifactId='magnolia-site-app']" webapp/pom.xml
          else
            sed -i s/MagnoliaWidgetSet/MagnoliaProWidgetSet/ ./webapp/src/main/webapp/WEB-INF/config/default/magnolia.properties
          fi

          if [[ "${{ matrix.flavor }}" == *-damfs ]]; then
            find ./webapp/src/main/webapp/WEB-INF -name magnolia.properties \
              -exec sed -i 's|magnolia.repositories.jackrabbit.config=WEB-INF/config/repo-conf/author.xml|magnolia.repositories.jackrabbit.config=WEB-INF/config/repo-conf/author-damfs.xml|g; s|magnolia.repositories.jackrabbit.config=WEB-INF/config/repo-conf/public.xml|magnolia.repositories.jackrabbit.config=WEB-INF/config/repo-conf/public-damfs.xml|g' {} \;
          fi

          mvn \
            -X \
            -DmagnoliaBundleVersion=${{ matrix.version }} \
            -T 8 \
            package

          mv ./webapp/target/webapp.war $repo_root/images/webapp/magnolia-build/${{ matrix.flavor }}/webapp-${{ matrix.version }}.war

  build-images:
    runs-on: ubuntu-latest
    needs: build-wars
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          repo_root="${GITHUB_WORKSPACE}"
          for version in $(ls $repo_root/images/webapp/magnolia-build/dx/*.war | sed -E 's/.*webapp-([0-9.]+)\.war/\1/'); do
            for flavor in dx-damfs ce-damfs dx ce; do
              tag=docker.io/neoskop/mgnl-webapp-$flavor:$version
              docker buildx build \
                --cache-to=type=gha,mode=max \
                --cache-from=type=gha \
                --platform linux/amd64,linux/arm64 \
                --build-arg VERSION=$version \
                --push \
                -t $tag \
                -f $repo_root/images/webapp/magnolia-build/$flavor/Dockerfile \
                $repo_root/images/webapp/magnolia-build
            done
          done

  notify-failure:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Notify Slack on failure
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: U0Q3KU9EC
          slack-message: |
            *[mgnl-on-k8s]:* Bauen der Webapp-Images ist fehlgeschlagen
            *Pipeline:* ${{ github.workflow }}
            *Run:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
